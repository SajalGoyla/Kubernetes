####network policy frontend to backend default communication
 229  kubectl run frontend --image=nginx
  230  kubectl run backend --image=nginx
  231  kubectl get pod
  232  kubectl get pod -o wide
  233  kubectl expose pod frontend --port 80
  234  kubectl expose pod backend --port 80
  235  kubectl exec frontend -- curl backend
  236  kubectl exec frontend -- curl 192.168.1.30
  237  kubectl exec backend -- curl 192.168.1.29
###lets create the defualt deny policy
vi default.yml
#######################################
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny
  namespace: default

spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
##########################################3
kubectl apply -f default.yml
#################################
###check front end backend communitaion work or not
236  kubectl exec frontend -- curl 192.168.1.30
  237  kubectl exec backend -- curl 192.168.1.29
####frontend to backend policy 
vi frontend.yml
###############################
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: frontend
  namespace: default

spec:
  podSelector:
    matchLabels:
      run: frontend
  policyTypes:

  - Egress
  egress:
    - to:
      - podSelector:
          matchLabels:
            run: backend
###################apply it
kubectl apply -f frontend.yml
######################################
vi backend.yml
########################################3
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: backend
  namespace: default

spec:
  podSelector:
    matchLabels:
      run: backend
  policyTypes:
    - Ingress
  ingress:
    - from:
      - podSelector:
          matchLabels:
            run: frontend
###########################
kubectl apply -f backend.yml
######################################3
####delete all your pod

 270  kubectl get pod -o wide
  271  kubectl exec frontend -- curl 192.168.1.30
  272  kubectl exec backend  -- curl 192.168.1.29

################delete all your policy

 278  kubectl get networkpolicy
  279  kubectl delete networkpolicy default-deny
  280  kubectl delete networkpolicy frontend
  281  kubectl delete networkpolicy backend
